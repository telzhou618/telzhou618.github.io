<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>kubesphere - 标签 - 扁舟的博客</title>
    <link>https://telzhou618.github.io/tags/kubesphere/</link>
    <description>kubesphere - 标签 | 扁舟的博客</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>telzhou618@qq.com (telzhou618)</managingEditor>
      <webMaster>telzhou618@qq.com (telzhou618)</webMaster><lastBuildDate>Tue, 09 Apr 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://telzhou618.github.io/tags/kubesphere/" rel="self" type="application/rss+xml" /><item>
  <title>k8s学习笔记 - k8s worker 节点扩容</title>
  <link>https://telzhou618.github.io/posts/a9d9636/</link>
  <pubDate>Tue, 09 Apr 2024 00:00:00 &#43;0000</pubDate>
  <author>telzhou618</author>
  <guid>https://telzhou618.github.io/posts/a9d9636/</guid>
  <description><![CDATA[<p>在现实中，往往会遇到集群节点资源紧张，这时候需要增加更多的节点来缓解，并且k8s会自动迁移一些容器到新的节点上，以保证各个节点压力均很，接下来利用 kubesphere 社区提供的集群安装工具 kubekey 来给集群增加新的 worker 节点。</p>
<p>现有的集群有三个节点，分别为master、node1、node2， 现在给集群扩容一个节点 node3，操作步骤如下所示。</p>]]></description>
</item>
<item>
  <title>k8s学习笔记 - Kubesphere CI/CD流谁线自动化部署</title>
  <link>https://telzhou618.github.io/posts/a9d96f7/</link>
  <pubDate>Fri, 08 Mar 2024 00:00:00 &#43;0000</pubDate>
  <author>telzhou618</author>
  <guid>https://telzhou618.github.io/posts/a9d96f7/</guid>
  <description><![CDATA[准备一个 spring-boot 项目项目如下，是一个简单的springboot项目 定义一个简单接口, 返回 helloworld 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package com.example.demo; import org.springframework.boot.*; import org.springframework.boot.autoconfigure.*; import org.springframework.web.bind.annotation.*; @SpringBootApplication]]></description>
</item>
<item>
  <title>k8s学习笔记 - Kubekey安装k8s和kubesphere</title>
  <link>https://telzhou618.github.io/posts/fbb3944/</link>
  <pubDate>Thu, 07 Mar 2024 00:00:00 &#43;0000</pubDate>
  <author>telzhou618</author>
  <guid>https://telzhou618.github.io/posts/fbb3944/</guid>
  <description><![CDATA[Kubekey 一键安装k8s 准备工作三台虚拟机, 系统为 centos7, 如下 机器IP hostname 角色 192.168.1.20 k8s-master master 192.168.1.21 k8s-node1 worker 192.168.1.22 k8s-node2 worker 执行如下操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24]]></description>
</item>
</channel>
</rss>
